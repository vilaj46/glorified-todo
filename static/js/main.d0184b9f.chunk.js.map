{"version":3,"sources":["components/TodoItems/TodoItems.module.css","components/AddTodoForm/AddTodoForm.module.css","svgs/auth_problem.svg","svgs/show_password.svg","svgs/hide_password.svg","svgs/check.svg","svgs/x.svg","svgs/checkComplete.svg","svgs/xComplete.svg","api.js","components/LoginPage/LoginPage.js","components/SignupPage/SignupPage.js","components/ProfilePage/ProfilePage.js","components/TodoItems/DragTypes.js","components/TodoItems/TodoItem.js","components/TodoItems/TodoItems.js","components/Header/Header.js","components/AddTodoForm/AddTodoForm.js","components/App/App.js","components/App/useTodos.js","components/App/useAuthentication.js","index.js","components/LoginPage/LoginPage.module.css","components/App/App.module.css"],"names":["module","exports","api","jwt","users","username","password","post","i","length","potentialUser","checkPW","currentPW","actualPW","LoginPage","setToken","useState","setUsername","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","displayPassword","setDisplayPassword","history","useHistory","togglePWVisibility","bool","Jumbotron","Form","className","styles","form","onSubmit","e","console","log","preventDefault","response","push","Group","controlId","relative","Control","type","placeholder","onChange","target","value","error","src","authProblem","alt","Text","textError","boldError","showPW1","showPW2","onClick","hidePassword","showPassword","Button","variant","loginButton","SignupPage","ProfilePage","TodoItem","item","index","completeTodo","removeTodo","swapTodoItems","useDrag","DragTypes","data","collect","monitor","isDragging","drag","useDrop","accept","drop","itemBeingDragged","checkImg","completed","checkComplete","check","xImg","xComplete","x","data-testid","IDNumber","li","ref","span","show","hide","p","todo","remove","stopPropagation","removeHelper","TodoItems","todos","DndProvider","backend","HTML5Backend","ul","map","key","SignProfileButton","isAuthenticated","to","button","link","LogButton","Header","authentication","header","linksContainer","ButtonGroup","AddTodoForm","addTodo","setValue","showWarning","setShowWarning","didAdd","Math","random","warningDisplay","display","size","input","buttonContainer","warning","App","setTodos","text","trim","searchedIndex","splice","item1","item2","newItem1","newItem2","useTodos","token","setAuthentication","useAuthentication","top","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0184b9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"TodoItems_li__2-lRF\",\"remove\":\"TodoItems_remove__32wHd\",\"p\":\"TodoItems_p__1w0JM\",\"span\":\"TodoItems_span__JnKXm\",\"completed\":\"TodoItems_completed__2NGOB\",\"x\":\"TodoItems_x__3B87g\",\"check\":\"TodoItems_check__39fw3\",\"hide\":\"TodoItems_hide__2i1oK\",\"show\":\"TodoItems_show__L3zqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddTodoForm_form__18_kb\",\"input\":\"AddTodoForm_input__crQzW\",\"buttonContainer\":\"AddTodoForm_buttonContainer__2a-jz\",\"button\":\"AddTodoForm_button__1Sb4-\",\"warning\":\"AddTodoForm_warning__28cyb\",\"display\":\"AddTodoForm_display__2MHQo\",\"hide\":\"AddTodoForm_hide__37pnf\"};","module.exports = __webpack_public_path__ + \"static/media/auth_problem.2a5a1bfc.svg\";","module.exports = __webpack_public_path__ + \"static/media/show_password.e4b464d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/hide_password.dbd11928.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.7812c5ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.2329a60d.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkComplete.c4e37bc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/xComplete.4a74a651.svg\";","const api = {\r\n  jwt: \"12345\",\r\n  users: [\r\n    {\r\n      username: \"vilaj46@gmail.com\",\r\n      password: \"georgia46\",\r\n    },\r\n  ],\r\n  post: (username, password) => {\r\n    for (let i = 0; i < api.users.length; i++) {\r\n      const potentialUser = api.users[i];\r\n      if (username === potentialUser.username) {\r\n        const response = api.checkPW(password, potentialUser.password);\r\n        return response;\r\n      }\r\n    }\r\n\r\n    return 404;\r\n  },\r\n  checkPW: (currentPW, actualPW) => {\r\n    if (currentPW === actualPW) {\r\n      return api.jwt;\r\n    } else {\r\n      return 406;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;\r\n","import React, { useState } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport styles from \"./LoginPage.module.css\";\r\n\r\nimport api from \"../../api.js\";\r\n\r\nimport authProblem from \"../../svgs/auth_problem.svg\";\r\nimport showPassword from \"../../svgs/show_password.svg\";\r\nimport hidePassword from \"../../svgs/hide_password.svg\";\r\n\r\nconst LoginPage = ({ setToken }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [usernameError, setUsernameError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const [displayPassword, setDisplayPassword] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = (e) => {\r\n    console.log(\"submit\");\r\n    e.preventDefault();\r\n    const response = api.post(username, password);\r\n    if (response === 404) {\r\n      setUsernameError(true);\r\n      setPasswordError(false);\r\n    } else if (response === 406) {\r\n      setPasswordError(true);\r\n      setUsernameError(false);\r\n    } else {\r\n      setToken({ username, response });\r\n      history.push(\"/profile\");\r\n      setUsernameError(false);\r\n      setPasswordError(false);\r\n    }\r\n  };\r\n\r\n  const togglePWVisibility = (bool) => {\r\n    setDisplayPassword(bool);\r\n  };\r\n\r\n  return (\r\n    <Jumbotron>\r\n      <Form className={styles.form} onSubmit={(e) => onSubmit(e)}>\r\n        <Form.Group controlId=\"formBasicEmail\" className={styles.relative}>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className={usernameError ? styles.error : \"\"}\r\n          />\r\n          {usernameError && (\r\n            <img\r\n              src={authProblem}\r\n              alt=\"Authentication Problem\"\r\n              className={styles.authProblem}\r\n            />\r\n          )}\r\n          <Form.Text className=\"text-muted\">\r\n            {usernameError ? (\r\n              <p className={styles.textError}>\r\n                The email you've entered doesn't match any account.{\" \"}\r\n                <span className={styles.boldError}>\r\n                  Sign up for an account.\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              <p>We'll never share your email with anyone else.</p>\r\n            )}\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\" className={styles.relative}>\r\n          <Form.Control\r\n            type={displayPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {displayPassword ? (\r\n            <button\r\n              type=\"button\"\r\n              className={passwordError ? styles.showPW1 : styles.showPW2}\r\n              onClick={() => togglePWVisibility(false)}\r\n            >\r\n              <img src={hidePassword} alt=\"Password Vision\" />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              className={passwordError ? styles.showPW1 : styles.showPW2}\r\n              onClick={() => togglePWVisibility(true)}\r\n            >\r\n              <img src={showPassword} alt=\"Password Vision\" />\r\n            </button>\r\n          )}\r\n          {passwordError && (\r\n            <img\r\n              src={authProblem}\r\n              alt=\"Authentication Problem\"\r\n              className={styles.authProblem}\r\n            />\r\n          )}\r\n          <Form.Text className=\"text-muted\">\r\n            {passwordError ? (\r\n              <p className={styles.textError}>\r\n                The password you've entered is incorrect.{\" \"}\r\n                <span className={styles.boldError}>Forgot Password?</span>\r\n              </p>\r\n            ) : (\r\n              <p>Never share your password with anyone else.</p>\r\n            )}\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className={styles.loginButton}>\r\n          Log In\r\n        </Button>\r\n      </Form>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\n// const UnderPasswordMessage = ({ passwordError }) => {\r\n//   return (\r\n\r\n//   );\r\n// };\r\n\r\nLoginPage.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nconst SignupPage = () => <div>Signup Page</div>;\r\n\r\nexport default SignupPage;\r\n","import React from \"react\";\r\n\r\nconst ProfilePage = () => {\r\n  return <div>Profile Page</div>;\r\n};\r\n\r\nexport default ProfilePage;\r\n","export default {\r\n  TodoItem: \"TodoItem\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n\r\nimport styles from \"./TodoItems.module.css\";\r\n\r\nimport check from \"../../svgs/check.svg\";\r\nimport x from \"../../svgs/x.svg\";\r\n\r\nimport checkComplete from \"../../svgs/checkComplete.svg\";\r\nimport xComplete from \"../../svgs/xComplete.svg\";\r\n\r\nimport DragTypes from \"./DragTypes.js\";\r\n\r\nconst TodoItem = ({ item, index, completeTodo, removeTodo, swapTodoItems }) => {\r\n  /**\r\n   * removeHelper\r\n   *\r\n   * @param {Object} e - Event object.\r\n   *\r\n   * We need to stop the bubbling up because it was just triggering\r\n   * the complete item action.\r\n   */\r\n  const removeHelper = (e) => {\r\n    e.stopPropagation();\r\n    removeTodo({ ...item, index });\r\n  };\r\n\r\n  const [, drag] = useDrag({\r\n    item: { type: DragTypes.TodoItem, data: { ...item, index } },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: DragTypes.TodoItem,\r\n    drop: (itemBeingDragged) => {\r\n      swapTodoItems(itemBeingDragged.data, { ...item, index });\r\n    },\r\n  });\r\n\r\n  const checkImg = item.completed ? checkComplete : check;\r\n  const xImg = item.completed ? xComplete : x;\r\n\r\n  return (\r\n    <li\r\n      data-testid={item.IDNumber}\r\n      className={`${styles.li} ${item.completed ? styles.completed : \"\"}`}\r\n      onClick={() => completeTodo({ ...item, index })}\r\n      ref={drag}\r\n    >\r\n      <span className={styles.span}>\r\n        <img\r\n          src={checkImg}\r\n          alt=\"Completed!\"\r\n          className={`${styles.check} ${\r\n            item.completed ? styles.show : styles.hide\r\n          }`}\r\n        />\r\n      </span>\r\n      <p className={styles.p} ref={drop}>\r\n        {item.todo}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        data-testid={`${item.IDNumber}-button`}\r\n        className={`${styles.span} ${styles.remove} ${\r\n          item.completed ? styles.completed : \"\"\r\n        }`}\r\n        onClick={(e) => removeHelper(e)}\r\n      >\r\n        <img src={xImg} alt=\"Remove\" className={styles.x} />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    todo: PropTypes.string.isRequired,\r\n    IDNumber: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  completeTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  swapTodoItems: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nimport styles from \"./TodoItems.module.css\";\r\n\r\nconst TodoItems = ({ todos, completeTodo, removeTodo, swapTodoItems }) => {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <ul className={styles.ul}>\r\n        {todos.map((item, index) => {\r\n          return (\r\n            <TodoItem\r\n              item={item}\r\n              key={item.IDNumber}\r\n              index={index}\r\n              completeTodo={completeTodo}\r\n              removeTodo={removeTodo}\r\n              swapTodoItems={swapTodoItems}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nTodoItems.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  completeTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  swapTodoItems: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from \"../App/App.module.css\";\r\n\r\nconst Header = ({ authentication, setToken, isAuthenticated }) => {\r\n  // const isAuthenticated =\r\n  //   authentication.username.length > 0 && authentication.token.length > 0;\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.linksContainer}>\r\n        <ButtonGroup>\r\n          <Link className={styles.link} to=\"/\">\r\n            <Button className={styles.button}>Items</Button>\r\n          </Link>\r\n          <LogButton isAuthenticated={isAuthenticated} setToken={setToken} />\r\n          <SignProfileButton isAuthenticated={isAuthenticated} />\r\n        </ButtonGroup>\r\n      </div>\r\n      <h1>My Glorified To Do List</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst SignProfileButton = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Link to=\"/profile\">\r\n        <Button className={`${styles.button} ${styles.link}`}>Profile</Button>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <Link className={styles.link} to=\"/signup\">\r\n        <Button className={styles.button}>Signup</Button>\r\n      </Link>\r\n    );\r\n  }\r\n};\r\n\r\nconst LogButton = ({ isAuthenticated, setToken }) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Button\r\n        className={`${styles.button} ${styles.link}`}\r\n        onClick={() => setToken({ username: \"\", response: \"\" })}\r\n      >\r\n        Logout\r\n      </Button>\r\n    );\r\n  } else {\r\n    return (\r\n      <Link className={styles.link} to=\"/login\">\r\n        <Button className={styles.button}>Login</Button>\r\n      </Link>\r\n    );\r\n  }\r\n};\r\n\r\nHeader.propTypes = {\r\n  authentication: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n    token: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport styles from \"./AddTodoForm.module.css\";\r\n\r\nconst AddTodoForm = ({ addTodo }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [showWarning, setShowWarning] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const didAdd = addTodo({\r\n      todo: value,\r\n      IDNumber: value + Math.random(10000),\r\n      completed: false,\r\n    });\r\n    if (didAdd) {\r\n      setValue(\"\");\r\n      setShowWarning(false);\r\n    } else {\r\n      console.log(didAdd);\r\n      setShowWarning(true);\r\n    }\r\n  };\r\n\r\n  const warningDisplay = showWarning ? styles.display : styles.hide;\r\n\r\n  return (\r\n    <Form className={styles.form} onSubmit={(e) => onSubmit(e)}>\r\n      <Form.Control\r\n        size=\"lg\"\r\n        type=\"text\"\r\n        placeholder=\"Todo...\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        className={styles.input}\r\n        onSubmit={(e) => onSubmit(e)}\r\n      />\r\n      <div className={styles.buttonContainer}>\r\n        <span className={`${styles.warning} ${warningDisplay}`}>\r\n          You must write something!\r\n        </span>\r\n        <Button\r\n          onClick={(e) => onSubmit(e)}\r\n          data-testid=\"add-todo\"\r\n          className={styles.button}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddTodoForm.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport styles from \"./App.module.css\";\n\n// Pages\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport ProfilePage from \"../ProfilePage/ProfilePage\";\nimport TodoItems from \"../TodoItems/TodoItems\";\n\nimport Header from \"../Header/Header\";\nimport AddTodoForm from \"../AddTodoForm/AddTodoForm\";\n\n// Hooks\nimport useTodos from \"./useTodos\";\nimport useAuthentication from \"./useAuthentication\";\n\nconst App = () => {\n  const [todos, addTodo, completeTodo, removeTodo, swapTodoItems] = useTodos();\n  const [authentication, setToken] = useAuthentication();\n\n  const isAuthenticated =\n    authentication.username.length > 0 && authentication.token.length > 0;\n\n  return (\n    <Jumbotron>\n      <div className={styles.top}>\n        <Header\n          authentication={authentication}\n          setToken={setToken}\n          isAuthenticated={isAuthenticated}\n        />\n        <Route\n          path=\"/\"\n          exact\n          render={() => <AddTodoForm addTodo={addTodo} />}\n        />\n      </div>\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <TodoItems\n            todos={todos}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            swapTodoItems={swapTodoItems}\n          />\n        </Route>\n        <Route path=\"/login\" exact>\n          {isAuthenticated ? (\n            <Redirect to=\"/profile\" />\n          ) : (\n            <LoginPage setToken={setToken} />\n          )}\n        </Route>\n        <Route path=\"/signup\" exact component={SignupPage} />\n        <Route path=\"/profile\" exact>\n          {isAuthenticated ? <ProfilePage /> : <Redirect to=\"/login\" />}\n        </Route>\n      </Switch>\n    </Jumbotron>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\r\n\r\nexport default () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  /**\r\n   * addTodo\r\n   *\r\n   * @param {Object} item - A potentially new todo item.\r\n   * @return {Boolean} Whether we added the TodoItem.\r\n   *\r\n   * Checks if our new todo isnt just a blank space.\r\n   * If its not add it to the list.\r\n   */\r\n  const addTodo = (item) => {\r\n    const text = item.todo.trim();\r\n    if (text.length > 0) {\r\n      item.todo = text;\r\n      todos.push(item);\r\n      setTodos([...todos]);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * completedTodo\r\n   *\r\n   * @param {Object} item - The todo item we will be completing or uncompleting.\r\n   *\r\n   * Given the item and the current index of the item.\r\n   * First we check if the given index is the one we are completing.\r\n   *\r\n   * If it isn't ( basically if we add drag and drop or item movement),\r\n   * then we will traverse the array checking.\r\n   *\r\n   * Toggle completed on the found item.\r\n   */\r\n  const completeTodo = (item) => {\r\n    const { index, IDNumber } = item;\r\n    if (todos[index].IDNumber === IDNumber) {\r\n      todos[index].completed = !todos[index].completed;\r\n    } else {\r\n      let searchedIndex;\r\n      for (let i = 0; i < todos.length; i++) {\r\n        const todo = todos[i];\r\n        if (todo.IDNumber === IDNumber) {\r\n          searchedIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      todos[searchedIndex].completed = !todos[searchedIndex].completed;\r\n    }\r\n\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  /**\r\n   * removeTodo\r\n   *\r\n   * @param {Object} item - The todo item we will be removing.\r\n   *\r\n   * Given the item and the current index of the item.\r\n   * First we check if the given index is the one we are removing.\r\n   *\r\n   * If it isn't ( basically if we add drag and drop or item movement),\r\n   * then we will traverse the array checking.\r\n   *\r\n   * Remove the found item.\r\n   */\r\n  const removeTodo = (item) => {\r\n    const { index, IDNumber } = item;\r\n\r\n    if (todos[index].IDNumber === IDNumber) {\r\n      todos.splice(index, 1);\r\n    } else {\r\n      let searchedIndex;\r\n      for (let i = 0; i < todos.length; i++) {\r\n        const todo = todos[i];\r\n        if (todo.IDNumber === IDNumber) {\r\n          searchedIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      todos.splice(searchedIndex, 1);\r\n    }\r\n\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  /**\r\n   * swapTodoItems\r\n   *\r\n   * @param {Object} item1 - Item being dragged / dropped.\r\n   * @param {*} item2 - Item being dropped on.\r\n   *\r\n   * Swap the items in the array.\r\n   */\r\n  const swapTodoItems = (item1, item2) => {\r\n    let newItem1 = { ...item1, index: item2.index };\r\n    let newItem2 = { ...item2, index: item1.index };\r\n    todos[item1.index] = newItem2;\r\n    todos[item2.index] = newItem1;\r\n    setTodos([...todos]);\r\n  };\r\n\r\n  return [todos, addTodo, completeTodo, removeTodo, swapTodoItems];\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport default () => {\r\n  // { username, token }\r\n  const [authentication, setAuthentication] = useState({\r\n    username: \"\",\r\n    token: \"\",\r\n  });\r\n\r\n  /**\r\n   * setToken\r\n   *\r\n   * @param {Object} data - { username, token }\r\n   *\r\n   * Authentication is processed and we are adding it to App state.\r\n   */\r\n  const setToken = (data) => {\r\n    setAuthentication({ username: data.username, token: data.response });\r\n  };\r\n\r\n  return [authentication, setToken];\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\n// Simple styling we will be going for:\n// https://www.w3schools.com/howto/howto_js_todolist.asp\n\n// Testing:\n// React Dnd\n// Hooks\n\n// Clean up LoginPage\n\n// Login / Authentication.\n// Error on the borders if there is an error with it.\n// Profile Page / Icon should be added in.\n// List of items TodoItems for edit.\n// Ability to change password.\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route to=\"/\" exact component={App} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__1nHR1\",\"error\":\"LoginPage_error__QZVcP\",\"textError\":\"LoginPage_textError__4bbEH\",\"boldError\":\"LoginPage_boldError__1cT-X\",\"loginButton\":\"LoginPage_loginButton__28ktM\",\"relative\":\"LoginPage_relative__3UQWy\",\"authProblem\":\"LoginPage_authProblem__3R4X0\",\"showPW1\":\"LoginPage_showPW1__2B6hi\",\"showPW2\":\"LoginPage_showPW2__2GIPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"App_top__3pCvB\",\"header\":\"App_header__3U4th\",\"linksContainer\":\"App_linksContainer__1mKK6\",\"link\":\"App_link__2XWxO\"};"],"sourceRoot":""}